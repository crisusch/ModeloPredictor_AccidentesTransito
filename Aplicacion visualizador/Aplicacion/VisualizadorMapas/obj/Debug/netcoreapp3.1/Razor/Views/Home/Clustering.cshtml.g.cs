#pragma checksum "D:\DDS\Proyectos - Git\Modelo predictor de accidentes de transito\Aplicacion visualizador\Aplicacion\VisualizadorMapas\Views\Home\Clustering.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "899e491326d32d4efa26f318584888d525cb929a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Clustering), @"mvc.1.0.view", @"/Views/Home/Clustering.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\DDS\Proyectos - Git\Modelo predictor de accidentes de transito\Aplicacion visualizador\Aplicacion\VisualizadorMapas\Views\_ViewImports.cshtml"
using VisualizadorMapas;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\DDS\Proyectos - Git\Modelo predictor de accidentes de transito\Aplicacion visualizador\Aplicacion\VisualizadorMapas\Views\_ViewImports.cshtml"
using VisualizadorMapas.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"899e491326d32d4efa26f318584888d525cb929a", @"/Views/Home/Clustering.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6c8060b97bcd9ce2b0d7aa8c9f1b0dc2033faa0e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Clustering : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/css/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/site.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\DDS\Proyectos - Git\Modelo predictor de accidentes de transito\Aplicacion visualizador\Aplicacion\VisualizadorMapas\Views\Home\Clustering.cshtml"
  
    ViewData["Title"] = "Clustering";
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "899e491326d32d4efa26f318584888d525cb929a6236", async() => {
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>");
#nullable restore
#line 12 "D:\DDS\Proyectos - Git\Modelo predictor de accidentes de transito\Aplicacion visualizador\Aplicacion\VisualizadorMapas\Views\Home\Clustering.cshtml"
      Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" - VisualizadorMapas</title>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "899e491326d32d4efa26f318584888d525cb929a6956", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "899e491326d32d4efa26f318584888d525cb929a8134", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://js.arcgis.com/4.19/esri/themes/light/main.css"" />
    <style>
        html,
        body,
        #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "899e491326d32d4efa26f318584888d525cb929a10301", async() => {
                WriteLiteral("\r\n\r\n    <div id=\"Leyenda\">\r\n    </div>\r\n    <div id=\"viewDiv\">\r\n    </div>\r\n\r\n\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "899e491326d32d4efa26f318584888d525cb929a10664", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "899e491326d32d4efa26f318584888d525cb929a11764", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "899e491326d32d4efa26f318584888d525cb929a12864", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
#nullable restore
#line 38 "D:\DDS\Proyectos - Git\Modelo predictor de accidentes de transito\Aplicacion visualizador\Aplicacion\VisualizadorMapas\Views\Home\Clustering.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script src=""https://js.arcgis.com/4.19/""></script>
    <script>
        require([
            ""esri/Map"",
            ""esri/layers/GeoJSONLayer"",
            ""esri/views/MapView"",
            ""esri/widgets/Legend"",
            ""esri/widgets/Expand"",
            ""esri/widgets/BasemapGallery"",
            ""esri/widgets/Search"",
            ""esri/widgets/Popup"",
            ""esri/widgets/Locate"",
            ""esri/intl"",
            ""esri/layers/FeatureLayer"",
            ""esri/widgets/Legend""
        ],
            function (Map, GeoJSONLayer, MapView, Legend, Expand, BasemapGallery, Search, Popup, Locate, intl, FeatureLayer, Legend) {
                const clusterConfig = {
                    type: ""cluster"",
                    clusterRadius: ""100px"",
                    // {cluster_count} is an aggregate field containing
                    // the number of features comprised by the cluster
                    popupTemplate: {
                        content: ""Se tienen registr");
                WriteLiteral(@"ados {cluster_count} incidentes en este sector."",
                        fieldInfos: [{
                            fieldName: ""cluster_count"",
                            format: {
                                places: 0,
                                digitSeparator: true
                            }
                        }]
                    },
                    clusterMinSize: ""24px"",
                    clusterMaxSize: ""60px"",
                    labelingInfo: [{
                        deconflictionStrategy: ""none"",
                        labelExpressionInfo: {
                            expression: ""Text($feature.cluster_count, '#,###')""
                        },
                        symbol: {
                            type: ""text"",
                            color: ""#004a5d"",
                            font: {
                                weight: ""bold"",
                                family: ""Noto Sans"",
                                size: ""12px""
    ");
                WriteLiteral(@"                        }
                        },
                        labelPlacement: ""center-center"",
                    }]
                }

                const layer = new GeoJSONLayer({
                    title: ""Incidentes registrados"",
                    url: `");
#nullable restore
#line 93 "D:\DDS\Proyectos - Git\Modelo predictor de accidentes de transito\Aplicacion visualizador\Aplicacion\VisualizadorMapas\Views\Home\Clustering.cshtml"
                     Write(Url.Action("Datos", "Home",new { anio = ViewBag.Anio }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"`,
                    copyright: ""CISR"",
                    featureReduction: clusterConfig,
                    popupTemplate: {
                        title: ""Información accidente {id}"",
                        content: `<table class=""table table-borderless table-sm"">
                                    <tr>
                                        <td><b>Año</b></td>
                                        <td>{anio}</td>
                                    </tr>
                                    <tr>
                                        <td><b>Dirección</b></td>
                                        <td>{direccion}</td>
                                    </tr>
                                    <tr>
                                        <td><b>N° fallecidos</b></td>
                                        <td>{fallecidos}</td>
                                    </tr>
                                    <tr>
                                        <td><b>N° Graves</b></td>");
                WriteLiteral(@"
                                        <td>{graves}</td>
                                    </tr>
                                    <tr>
                                        <td><b>N° Menos graves</b></td>
                                        <td>{menosGraves}</td>
                                    </tr>
                                    <tr>
                                        <td><b>N° Leves</b></td>
                                        <td>{leves}</td>
                                    </tr>
                                </table>`,
                        fieldInfos: [
                            {
                                fieldName: ""time"",
                                format: {
                                    dateFormat: ""short-date-short-time""
                                }
                            }
                        ]
                    },
                    renderer: {
                        type: ""simple"",
                ");
                WriteLiteral(@"        field: ""mag"",
                        symbol: {
                            type: ""simple-marker"",
                            size: 10,
                            color: ""#69dcff"",
                            outline: {
                                color: ""rgba(0, 139, 174, 0.5)"",
                                width: 10
                            }
                        }
                    }
                });

                const baseLayer = new FeatureLayer({
                    legendEnabled: false,
                    popupEnabled: false,
                    renderer: {
                        type: ""simple"",
                        symbol: {
                            type: ""simple-fill"",
                            color: [65, 65, 65, 1],
                            outline: {
                                color: [50, 50, 50, 0.75],
                                width: 10
                            }
                        }
                    },");
                WriteLiteral(@"
                    spatialReference: {
                        wkid: 5936
                    }
                });

                const map = new Map({
                    basemap: ""topo-vector"",
                    layers: [baseLayer, layer]
                });

                var view = new MapView({
                    container: ""viewDiv"",
                    map: map,
                    center: [-70.6482700, -33.4569400],
                    zoom: 11,
                    popup: {
                        collapsed: false,
                        collapseEnabled: true,
                        dockEnabled: true,
                        dockOptions: {
                            buttonEnabled: false,
                            breakpoint: false,
                            position: ""bottom-right""
                        }
                    }
                });

                // widget de busqueda
                var search = new Search({
                    view: vi");
                WriteLiteral(@"ew
                });

                view.ui.add(search, ""top-right"");

                // Mapas base
                var basemapGallery = new BasemapGallery({
                    view: view,
                    container: document.createElement(""div"")
                });

                // Leyeneda de la cantidad la proporcion respecto a la cantidad
                var comps = `<div id=""infoDiv"" class=""esri-widget"">
                <button id=""cluster"" class=""esri-button"">Desactivar clustering</button>
                <div id=""legendDiv""></div>
                </div>`;
                var html = $.parseHTML(comps);
                $(""#Leyenda"").append(html);

                const legend = new Legend({
                    view: view,
                    container: ""legendDiv""
                });

                const infoDiv = document.getElementById(""infoDiv"");

                var desabledClusternig = new Expand({
                    view: view,
                    content:");
                WriteLiteral(@" infoDiv,
                    expandIconClass: ""esri-icon-layer-list"",
                    expanded: false,
                    mode: ""floating""
                });

                view.ui.add(desabledClusternig, ""top-right"");

                const toggleButton = document.getElementById(""cluster"");

                // Funcion para activar o desactivar el clustering
                toggleButton.addEventListener(""click"", function () {
                    let fr = layer.featureReduction;
                    layer.featureReduction = fr && fr.type === ""cluster"" ? null : clusterConfig;
                    toggleButton.innerText = toggleButton.innerText === ""Activar clustering"" ? ""Desactivar clustering"" : ""Activar clustering"";
                });

                // Widget spand para mapas base
                var bgExpand = new Expand({
                    view: view,
                    content: basemapGallery,
                    mode: ""floating"",
                    expandTooltip: ""Mapas ");
                WriteLiteral(@"base"",
                    label: ""Mapas base""
                });

                // Se añade el mapa base
                view.ui.add(bgExpand, ""top-left"");

                // Se crea la instancia del widget de trackeo y se inserta en la UI
                var locateBtn = new Locate({
                    view: view
                });

                view.ui.add(locateBtn, {
                    position: ""top-left""
                });

                intl.setLocale(""es"");
            });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
